<div class="container container-blue-portal" style="width:100%;">

    <div class="form-group row" >
        <input type="hidden" name="AgencyId" value="<%= @agency.id %>">
        <%= f.label :business_registration_number, 'Business Registration Number', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :business_registration_number, class: 'form-inputtext2', required: true, maxlength: "50", pattern: "^([a-zA-Z0-9-]+)$" %>
        </div>
    </div>

    <div class="form-group row" >
        <%= f.label :license_number, 'Licence Number', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :license_number, class: 'form-inputtext', required: true, maxlength: "50", pattern: "^([a-zA-Z0-9]+)$" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :license_expired_at,'Licence Expired Dates',style:'padding-left:2px;', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :license_expired_at,class: 'form-inputtext datepicker',hidden: true, id: "datepicker", min: Time.now().to_s.slice(0,10)  %>
            <%= f.date_field :license_expired_at,class: 'form-inputtext', id: "datepicker", :required => true %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :agency_license_category_id,'Agency Licence Category',  class: 'form-label required'%>
        <div class="col-sm-4">
            <%= select_tag "agency[agency_license_category_id]", options_from_collection_for_select(AgencyLicenseCategory.order(:name).all, 'id', 'name', @agency.agency_license_category_id), include_blank: form_select_option_text, class: 'form-inputtext', :required => true %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :name, 'Agency Name', id: 'name_label', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :name, class: 'form-inputtext', required: true, pattern: "^[a-zA-Z0-9].*", maxlength: "150" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :director_name, 'Director Name',  class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :director_name, class: 'form-inputtext2', required: true, pattern: "^[a-zA-Z0-9].*", parsley_pattern_message: "Agency Name must not begin with a special characters", maxlength: "150" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :director_ic_number, 'Director NRIC', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :director_ic_number, class: 'form-inputtext2', required: true, maxlength: "12", pattern: "[0-9]*" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :pic_name, 'Person In Charge Name', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :pic_name, class: 'form-inputtext2', required: true, maxlength: "150", pattern:"^([a-zA-Z0-9\s]+)$" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :pic_ic_number, 'Person In Charge NRIC', class: 'form-label required' %>
        <div class="col-sm-4">
            <%= f.text_field :pic_ic_number, class: 'form-inputtext2', required: true , maxlength: "12", pattern: "[0-9]*" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :pic_phone, 'Person In Charge Contact No.', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :pic_phone, class: 'form-inputtext2', required: true, :data => { 'parsley-type' => 'number' }, maxlength: "20", pattern: "[0-9]*" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :address1, 'Address', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :address1, class: 'form-inputtext2', required: true, maxlength: "50" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :address2, class: 'form-label' do %>
        <% end %>
        <div class="col-sm-4">
            <%= f.text_field :address2, class: 'form-inputtext2', maxlength: "50" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :address3, class: 'form-label' do %>
        <% end %>
        <div class="col-sm-4">
            <%= f.text_field :address3, class: 'form-inputtext2', maxlength: "50" %>
        </div>
    </div>

    <div class="form-group row">
        <%= f.label :address4, class: 'form-label' do %>
        <% end %>
        <div class="col-sm-4">
            <%= f.text_field :address4, class: 'form-inputtext2', maxlength: "50" %>
        </div>
    </div>

    <%= render 'external/shared/vertical_form_state_postcode_town', {form: f} %>

    <div class="form-group row">
        <%= f.label :phone, 'Phone No (Office)', class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.text_field :phone, class: 'form-inputtext', required: true, :data => { 'parsley-type' => 'number' }, maxlength: "20", pattern: "[0-9]*" %>
        </div>
    </div>

    <div class="form-group row" id="employer_email_row">
        <%= f.label :email, class: 'form-label required'%>
        <div class="col-sm-4">
            <%= f.email_field :email, readonly: true, class: 'form-inputtext', required: true, maxlength: "100", pattern: "[a-zA-Z0-9]..*" %>
        </div>
    </div>

    <div class="form-group row">
        <label class="form-label"></label>
        <div class="col-sm-6">
            <%= f.check_box :personal_data_consent, required: true %>
            I consent to the processing of my personal data by FOMEMA
            Sdn Bhd in accordance with the terms as set out in the
            <a href="https://www.fomema2u.com.my/privacy-policy/">Privacy Policy</a>
        </div>
    </div>

    <div class="form-group row">
        <label class="form-label"></label>
        <div class="col-sm-6">
            <%= f.check_box :agreement_accepted, required: true %>
            I hereby declare that I have carefully reviewed this <a href="<%= agency_agreement_external_agencies_path %>">Agreement</a>, agreed to be subjected to and accept all of its terms and conditions.
        </div>
    </div>

    <div class="form-group row">
        <%=f.label :documents, class: 'form-label required' %>
        <div class="col-md-8" style="padding-left:120px;">
            <p style="padding-top: calc(0.375rem + 1px);">Please upload the following documents for verification. Please upload each document separately.</p>
            <div class="" id="agency_document_list">
                <ol class="ol-list-portal">
                    <li>Company’s registration document (SSM/ Form 9)</li>
                    <li>Company’s registration document (Form 49)</li>
                    <li>Licence (JTKSM)</li>
                    <li>NRIC of Director</li>
                </ol>
            </div>
            Please upload only valid files (JPG, PNG, PDF). The total sizes of all files is limited to 10 MB.
        </div>
    </div>

    <div class="row">
        <div class="col-md-7 offset-md-3">

            <label for="agency_uploads">Previously Uploaded Documents</label>
            <table class="table table-bordered table-striped" id="filetable">
                <tr>
                    <th>Category</th>
                    <th>Documents</th>
                    <th>Date Uploaded</th>
                </tr>

                <% @agency.uploads.each do |upload| %>
                    <tr>
                        <td class="filenames1 uploads_categories" data-category="<%= upload.category %>" name="uploadedfilecategory"><%= upload.category %></td>

                        <td class="filenames" name="uploadedfilename">
                            <% upload.documents.each do |document| %>
                                <div><%= link_to document.filename, rails_blob_url(document), target: "_blank" %></div>
                            <% end %>
                        </td>
                        <td class="filenames"><%= upload.updated_at&.strftime("%d/%m/%Y %I:%M:%S %p") %></td>
                    </tr>
                <% end %>

                <% if @agency.uploads.blank? %>
                    <tr><td colspan="3">There are no uploaded documents</td></tr>
                <% end %>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-7 offset-md-3">
            <p style="padding-top: calc(0.375rem + 1px);"><center>Please upload a new document for verification.</center></p>
        </div>
    </div>

    <div class="form-group row">
        <div class=" col-md-9 offset-md-2">
            <!-- add more fields or remove them by jquery -->
            <div id="document-input-group">
                <div class="input-group custom-input-group">
                    <div class="col-md-7 document-type">
                        <select class="col-md-12 form-control document-type-selector" name="agency[uploads][][category]">
                            <option value="">Select option</option>
                            <% Agency::DOCUMENT_TYPES.each do |document_type, index| %>
                            <option value="<%= document_type %>"><%= index %></option>
                            <% end %>
                        </select>
                    </div>

                    <div class="custom-file col-md-6">
                        <input type="file" name="agency[uploads][][documents]" class="custom-file-input"
                            onchange="validateFiles(this)" disabled>
                        <label class="custom-file-label" id="filename" name="filename"></label>

                    </div>

                    <div style="width: 70px;" class="">
                        <input type="text" style="border-radius: 0; border: 0;" readonly="readonly" class="form-control inline-file-size" placeholder="0 MB" value="">
                    </div>

                    <div class="removal-button btn btn-danger font-weight-bold">X</div>
                <table class="table table-bordered table-striped hidden">
                <tr>
                    <th>Category</th>
                    <th>Documents</th>
                    <th>Date Uploaded</th>
                </tr>

                <% @agency.uploads.each do |upload| %>
                    <tr>
                        <td class="filenames1" name="uploadedfilecategory"><%= upload.category %></td>

                        <td class="filenames2" name="uploadedfilename">
                            <% upload.documents.each do |document| %>
                                <div><%= link_to document.filename, rails_blob_url(document), target: "_blank" %></div>
                            <% end %>
                        </td>
                        <td class="filenames3"><%= upload.updated_at&.strftime("%d/%m/%Y %I:%M:%S %p") %></td>
                    </tr>
                <% end %>

                <% if @agency.uploads.blank? %>
                    <tr><td colspan="3">There are no uploaded documents</td></tr>
                <% end %>
            </table>

                </div>
            </div>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-md-4 col-form-label" for=""></label>
        <div class="col-md-6">
            <h6>Total Uploaded Size: <span id="total_uploaded_label">0 MB</span></h6>
        </div>
    </div>

    <div class="form-group row" style="padding-left:130px;">
        <%= f.label :submit, class: 'col-md-4 col-form-label' do %>
        <% end %>
        <div class="col-sm-2 buttons-wrapper">
            <%= f.button 'Add more documents', id: 'add_more_documents', class: 'btn btn-success float-right', type: 'button' %>
        </div>
    </div>

    <div class="form-group row mt-5"  style="padding-left:10px;">
        <label class="form-label"  style="padding-right:75px;">Pending Documents</label>
        <div class="col-md-8">
            <textarea class="form-control" readonly="readonly" data-parsley-uploaded-documents=""
                data-parsley-validate-if-empty="" name="" id="agency_pending_documents" rows="6"></textarea>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-md-4 col-form-label"></label>
        <div class="col-sm-3 buttons-wrapper"  style="padding-left:80px;">
            <%= f.submit 'Submit for Approval', id: 'approval_submit', class: 'btn-blue-portal float-right'%>
        </div>
    </div>

</div>

<style>
    #filename {
        clear: both;
        display: inline-block;
        overflow: hidden;
        white-space: nowrap;
    }
    div.custom-radio > label {
        margin-left: 10px;
        margin-right: 40px;
    }

    .form-group>label {
        text-align: left;
        padding-left:3px;
    }

    input,
    select {
        border: 1px solid #337ab7;
        border-radius: 20px;
        padding: 5px;
    }

    #approval_submit {
        background-color: #2b3990;
        border-radius: 20px;
        padding-left: 40px;
        padding-right: 40px;
    }

    #add_more_documents {
        border-radius: 20px;
    }

    #draft_submit {
        background-color: #337ab7;
        border-radius: 20px;
        padding-left: 40px;
        padding-right: 40px;
    }

    .select2-selection.select2-selection--single,
    .select2-selection.select2-selection--multiple {
        border-radius: 20px;
    }

    .select2-selection {
        border: 1px solid #337ab7 !important;
        border-radius: 5px;
        height: calc(2.0625rem + 2px);
    }
    .custom-input-group {
        border: 1px solid #337ab7 !important;
        border-radius: 5px;
        padding: 0;
    }
    .document-type {
        padding: 0;
    }
    .document-type > select {
        border: 0px;
    }
    .buttons-wrapper {
        padding: 0;
    }
    .top-margin {
        margin-top: 10px;
    }

    ul.emp_type_desc {
        padding-left: 15px;
    }
    .form-label {
            display: inline-block;
            width: 210px;
    }
    .form-town {
        display:inline-block;
        width:40px;
    }
    .form-poscode {
        display:inline-block;
        width:70px;
    }
    .form-inputtext {
        display: inline-block;
        width: 130%;
        border-radius:5px;
    }
    .form-inputtext2 {
        display: inline-block;
        width: 250%;
        border-radius:5px;
    }
    .form-inputtext3 {
        display: inline-block;
        width: 110%;
        border-radius:5px;
    }
    .form-inputtext4 {
        display: inline-block;
        width: 100%;
        border-radius:5px;
    }
</style>

<% content_for :page_end_scripts do %>
<script>
        $(function() {
            $( "#datepicker" ).datepicker({ minDate: 0,dateFormat: 'dd/mm/yy'});
        });

       function setUploadCategoryOption() {

            $('.document-type-selector').each(function (index, obj) {
                $(obj).empty();
                $(obj).append(new Option('Select option', ''));

                var needed_validate_documents = required_documents;

                needed_validate_documents.forEach(function (document_type) {

                    var document_type_label = document_types[document_type];

                    $(obj).append(new Option(document_type_label, document_type));
                });

            });

            // clone select option after updating the option

            cloneSelect();
        }

        function cloneSelect() {
            window['cloned_select'] = $('.custom-input-group:first').clone(true, true);
        }

        removeAttachmentField('.removal-button:last');
        var clonedAttachmentInput = $('.custom-input-group').clone(true, true);
        removeAttachmentField('.removal-button:last');
        bindLastDocumentTypeSelectorAndFileSelector();

        // re-sync pending documents

        function syncPendingDocuments() {

            var pending_uploads = getPendingUploads();

            if (!pending_uploads) {
                return false;
            }

            setPendingDocuments(pending_uploads);
        }


        function getPendingUploads() {

            //var employer_type = 'agency';
            var needed_validate_documents = required_documents;

            // var pending_uploads = needed_validate_documents;
            uploaded_category = $('.uploads_categories').map(function(idx, row){
                return row.getAttribute('data-category');
            });

            var diff = $(needed_validate_documents).not(uploaded_category).get();

            var pending_uploads = diff.slice();
            // console.log(needed_validate_documents);

            $('.custom-input-group').each(function (index, obj) {

                var document_type = $(obj).find('.document-type-selector').val();
                var selected_file = $(obj).find('.custom-file-input').val();
                // check if this document needed by current employer type
                // if yes we need to check file exist

                if (diff.includes(document_type)) {
                    // if valid upload

                    if (selected_file) {

                        // remove from pending uploads

                        for( var i = 0; i < pending_uploads.length; i++){
                            if ( pending_uploads[i] === document_type) {
                                pending_uploads.splice(i, 1);
                            }
                        }
                    }
                }

            });

            return pending_uploads;
        }

        function setPendingDocuments(pending_uploads) {

            var pending_list = '';

            pending_uploads.forEach(function (document_type) {

                var document_type_label = document_types[document_type];

                pending_list = pending_list + document_type_label + '\n';
            });

            var pending_documents = $("#agency_pending_documents");

            // reset pending list

            pending_documents.val('');

            pending_documents.val(pending_documents.val() + pending_list);
        }

        var document_types = <%= Agency::DOCUMENT_TYPES.to_json.html_safe %>;

        var required_documents =
                [
                    'COMPANY_REGISTRATION_DOCUMENT',
                    'FORM_49',
                    'LICENCE_JTKSM',
                    'DIRECTOR_NRIC',

                ];

        window
            .Parsley
            .addValidator('uploadedDocuments', {
                requirementType: 'string',
                validateString: function (value, requirement) {

                    var pending_uploads = getPendingUploads();

                    // if there is still pending documents, return false

                    if (pending_uploads.length > 0) {

                        // append to pending list

                        setPendingDocuments(pending_uploads);

                        // return false validation of there is documents pending

                        return false;
                    }

                    return true;
                },
                messages: {
                    en: 'You must upload all the required documents',
                }
            });


        $("#agency-registration-form").parsley({
            errorClass: 'is-invalid text-danger',
            errorsWrapper: '<div class="invalid-feedback"></div>',
            errorTemplate: '<span></span>',
            trigger: 'change'
        });



        $('.custom-file-input').change(function() {
            let filePath = $(this).val().split("\\")
            let fileName = filePath[filePath.length - 1]
            if (fileName != "")
                $(this).siblings('.custom-file-label').html(fileName)
            else
                $(this).siblings('.custom-file-label').html("")
        });
        // Function to duplicate document fields
        $('#add_more_documents').click(() => {
            clonedAttachmentInput
                .clone(true, true)
                .appendTo("#document-input-group")
                .addClass('mt-3 col-md-12')
                .find(".custom-file-input")
                .val("")
                .attr("disabled", "disabled")
            $('.custom-input-group:last')
                .find(".custom-file-label").html("Choose file")
            bindLastDocumentTypeSelectorAndFileSelector();
            removeAttachmentField('.removal-button:last');
            $('#no-input-placeholder').hide();
        });

        function removeAttachmentField(field) {
        $(field).click(function() {
            $(this).closest('.custom-input-group').remove();

            if ($('.custom-input-group').length === 0) {
                $('#no-input-placeholder').show();
            }
        });
    }
        bindLastDocumentTypeSelectorAndFileSelector();

        // Function to re-enable form input after selecting dom type & to set file name after selecting in input
        function bindLastDocumentTypeSelectorAndFileSelector() {
            $('.custom-file-input:last').change(function() {
                let filePath = $(this).val().split("\\")
                let fileName = filePath[filePath.length - 1]
                if (fileName != "")
                    $(this).siblings('.custom-file-label').html(fileName)
                else
                    $(this).siblings('.custom-file-label').html("Choose file")
            });

            $('.document-type-selector:last').change(function() {
                let selectedValue = $("option:selected", this).val();
                inputField = $(this).closest('.custom-input-group').find(".custom-file input");

                if (selectedValue.length > 0) {
                    inputField.removeAttr('disabled');
                } else {
                    inputField.attr("disabled", "disabled")
                }
            });
        }

        $('.set-deletion').click(function() {
            filenames = $(this).closest('tr').find('.filenames');
            filenames.toggleClass('text-decoration-line-through');
            text = $(this).hasClass('btn-danger') ? 'Undo Remove' : 'Remove';
            $(this).text(text).toggleClass('btn-danger btn-primary');

            ids = $('.set-deletion.btn-primary').map(function() {
                return $(this).attr('data-id');
            }).get().join(',');

            $('#remove_uploaded_file').val(ids);
        });

        function validateFiles(inputFile) {
            var maxExceededMessage = "This file exceeds the maximum allowed file size (10 MB)";
            var extErrorMessage = "Only image file with extension: .jpg, .jpeg, .gif or .png is allowed";
            var allowedExtension = ["jpg", "jpeg", "png", "pdf"];

            var extName;
            var maxFileSize = <%= 10.megabytes %>;
            var sizeExceeded = false;
            var extError = false;

            var total_uploaded_size = getTotalUploadedSize();

            var file = inputFile.files[0];

            var file_size = file.size;

            // check if single file exceed max file size

            if (file_size && maxFileSize && file_size > parseInt(maxFileSize)) {
                sizeExceeded = true;
            };

            // check if combine with previous file will exceed max file size

            var combine_size = (file_size + total_uploaded_size) - file_size;

            if (combine_size > parseInt(maxFileSize)) {
                sizeExceeded = true;
            };

            extName = file.name.split('.').pop().toLowerCase();

            if ($.inArray(extName, allowedExtension) == -1) { extError = true; };

            if (sizeExceeded) {
                window.alert(maxExceededMessage);
                $(inputFile).val('');
                file_size.reset();
            }

            if (extError) {
                window.alert(extErrorMessage);
                $(inputFile).val('');
            }

            // set inline size

            var file_size_label = getUploadSizeLabel(file_size);

            $(inputFile).closest('div').next().find('.inline-file-size').val(file_size_label);

            // set label

            setTotalUploadLabel();

            // sync pending documents

            syncPendingDocuments();
        }


        function getTotalUploadedSize() {

            var total_uploaded_size = 0;

            $('.custom-file-input').each(function (index, obj) {

                if (obj.files.length > 0) {
                    total_uploaded_size = total_uploaded_size + parseFloat(obj.files[0].size);
                }

            });

            return total_uploaded_size;
        }

        function setTotalUploadLabel() {

            var total_uploaded_size = getTotalUploadedSize();

            var total_uploaded_label =  getUploadSizeLabel(total_uploaded_size);

            $("#total_uploaded_label").text(total_uploaded_label);
        }

        function getUploadSizeLabel(upload_size) {

            var total_mb = upload_size / 1000000;

            total_mb = total_mb.toFixed(2);

            var upload_size_label = total_mb + ' MB';

            return upload_size_label;
        }

</script>
<% end %>