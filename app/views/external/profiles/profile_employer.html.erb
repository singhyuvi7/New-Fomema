<% if @user.errors.any? %>
    <p class="alert alert-danger">error : <%= @user.errors.full_messages.join(', ') %></p>
<% end %>

<% if @employer.errors.any? %>
    <p class="alert alert-danger">error : <%= @employer.errors.full_messages.join(', ') %></p>
<% elsif !@user.unconfirmed_email.blank? %>
    <div id="dialog-email-reminder" class="hidden" title="Confirm your email address">
        <p>A confirmation email has been sent out to your new email address <b><%= @user.unconfirmed_email %></b> on <b><%= @user.confirmation_sent_at&.strftime(get_standard_date_format) %></b> for verification.</p>
        <% if !current_user.confirmation_sent_at.blank? && current_user.confirmation_sent_at >= '2022-08-15' %>
            <div class="d-flex justify-content-center">
                <button class="text-center">
                    <%= link_to destroy_external_user_session_path(user_type: current_user.userable_type), :method => :delete, :title => "OK", class:'dropdown-item' do %>
                        <i class="fa fa-lock"></i> OK
                    <% end %>
                </button>
            </div>
        <% end %>
    </div>

    <% content_for :page_end_scripts do %>
        <% if !current_user.confirmation_sent_at.blank? && current_user.confirmation_sent_at >= '2022-08-15' %>
            <script>openDialog_logout({target: '#dialog-email-reminder', type: 'warning'});</script>
        <% else %>
            <script>openDialog({target: '#dialog-email-reminder', type: 'warning'});</script>
        <% end %>
    <% end %>
<% end %>

<%= render "/shared/all_flash" %>

<%= form_for @user, url: external_profile_update_path, method: :PUT, html: {multipart: true, id: "profile_form", class: "with-parsley"} do |form| %>
    <div class="card" style="width:100%">
        <div class="card-header border-0 bg-transparent text-dark">
            <strong>Profile </strong>
        </div>
        <div class="card-body bgportalprofile" >
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <%= form.label :name, "Employer Type", class: 'col-form-label required' %>
                        <%= text_field :employer_type, :name, class: 'form-control', required: true, disabled: true %>
                    </div>
                </div>
                <% if @employer_type.try(:id) == 1 %>
                        <%
                          disabled_ic  = true
                          disabled_ic  = false if @employer.ic_passport_number&.strip.blank? && @employer.approval_status !='UPDATE_PENDING_APPROVAL'
                        %>
                        <div class="col-md-2">
                            <div class="form-group">
                                <%= label_tag :ic_passport_number, 'IC Passport Number', class: 'col-form-label required' %>
                                <%= text_field :employer, :ic_passport_number, id: :ic_passport_number, class: 'form-control', required: true, disabled: disabled_ic,  data: { parsley_pattern: "^([a-zA-Z0-9]+)$",  parsley_pattern_message: "Only alphabets, numbers are allowed"} %>
                            </div>
                        </div>
                     <% if @employer.approval_status !='UPDATE_PENDING_APPROVAL' %>
                        <%if @employer.employer_amended_at.nil? && !@employer.ic_passport_number&.strip.blank? %>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <input type="button" class="btn btn-blue-portal" value="edit" onclick="JavaScript:return edit();" />
                                </div>
                            </div>
                        <% end %>
                    <% end %>
                <% elsif  @employer.try(:employer_type_id) == 2 %>
                        <%
                          disabled_roc  = true
                          disabled_roc  = false if @employer.business_registration_number&.strip.blank?  && @employer.approval_status !='UPDATE_PENDING_APPROVAL'
                        %>
                        <div class="col-md-2">
                            <div class="form-group">
                                <%= label_tag :business_registration_number, 'Business Registration Number', class: 'col-form-label required' %>
                                <%= text_field :employer, :business_registration_number, id: :business_registration_number, class: 'form-control', required: true, disabled: disabled_roc, data: { parsley_pattern: "^([a-zA-Z0-9]+)$",  parsley_pattern_message: "Only alphabets, numbers are allowed" } %>
                            </div>
                        </div>
                    <% if @employer.approval_status !='UPDATE_PENDING_APPROVAL' %>
                        <% if @employer.employer_amended_at.nil? && !@employer.business_registration_number&.strip.blank? %>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <input type="button" class="btn btn-blue-portal" value="edit" onclick="edit();" />
                                </div>
                            </div>
                        <% end %>
                    <% end %>
                <% end %>
            </div>
            <div class="row">
                <% if @user.employer_supplement_id.blank? %>
                    <div class="col-md-2">
                        <div class="form-group">
                            <%= form.label :title_id, "Title"   %>
                            <%= form.select :title_id, options_from_collection_for_select(Title.order(:name).all, 'id', 'name', form.object.title_id), {include_blank: form_select_option_text}, class: 'form-control form-field' %>
                        </div>
                    </div>
                <% end %>
                <div class="col-md-4">
                    <div class="form-group">
                        <%= label_tag :employer_name, 'Employer Name', class: 'col-form-label required' %>
                        <%= text_field :userable, :name, class: 'form-control', required: true, disabled: true %>
                    </div>
                </div>
                <% if @employer.try(:employer_type_id) == 2  %>
                    <div class="col-md-4">
                        <div class="form-group">
                            <%= form.label :name, 'Supplementary Name', class: 'col-form-label required' %>
                            <%= form.text_field :name, class: 'form-control', required: true %>
                        </div>
                    </div>
                <% end %>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <%= label_tag :employer_address1, 'Employer Address', class: 'col-form-label required' %>
                        <%= text_field :employer, :address1, class: 'form-control', required: true, maxlength: "50" %>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <%= label_tag :employer_phone, 'Phone', class: 'col-form-label required' %>
                        <%= telephone_field :employer, :phone, class: 'form-control', required: true, maxlength: '12', data: { parsley_maxlength: "12", parsley_maxlength_message: "Maximum length of 12 numbers", parsley_pattern: "[0-9]*", parsley_pattern_message: "Only numbers are allowed" } %>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <%= label_tag :email, 'Email ', class: 'col-form-label required' %>
                        <%= email_field :employer, :email, class: 'form-control ', required: true %>
                        <% unless @user.unconfirmed_email.blank? %><b><i class="text-danger">***Kindly verify your email address  <%= @user.unconfirmed_email %></i></b><% end %>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <%= text_field :employer, :address2, { class: 'form-control', maxlength: "50"} %>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <%= text_field :employer, :address3, { class: 'form-control', maxlength: "50"} %>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <%= text_field :employer, :address4, { class: 'form-control', maxlength: "50"} %>
                    </div>
                </div>
            </div>
            <div class="row">
                <%= render 'external/shared/employer_profile_form_state_postcode_town', {form: form} %>

                <% if @employer.try(:employer_type_id) == 2 || !@user.employer_supplement_id.blank? %>
                    <div class="col-md-2">
                        <div class="form-group">
                            <%= label_tag :employer_pic_name, 'Person In Charge Name', class: 'col-form-label' %>
                            <%= text_field :employer, :pic_name, { class: 'form-control' } %>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <%= label_tag :employer_pic_phone, 'Person In Charge Contact No.', class: 'col-form-label' %>
                            <%= text_field :employer, :pic_phone, class: 'form-control',  data: { parsley_maxlength: "12", parsley_maxlength_message: "Maximum length of 12 numbers", parsley_pattern: "[0-9]*", parsley_pattern_message: "Only numbers are allowed" } %>
                        </div>
                    </div>
                <% end %>
            </div>
            <% if @user.employer_supplement_id.blank? %>
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <%= label_tag :employer_bank_payment_id, 'Bank Payment ID', class: 'col-form-label' %>
                            <%= text_field :employer, :bank_payment_id, class: 'form-control',  data: { parsley_pattern: "^([a-zA-Z0-9]+)$",  parsley_pattern_message: "Only alphabets, numbers are allowed"} %>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <%= label_tag :employer_bank_id, 'Bank', class: 'col-form-label' %>
                            <%= select_tag "employer[bank_id]", options_from_collection_for_select(Bank.where(status: 'ACTIVE').where.not(routing: [nil, '']).order(:name).all, 'id', 'name', @employer.bank_id), include_blank: form_select_option_text, class: 'form-control form-field' %>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <%= label_tag :employer_bank_account_number, 'Bank Account Number', class: 'col-form-label' %>
                            <%= text_field :employer, :bank_account_number, class: 'form-control', data: { parsley_pattern: "[0-9]*", parsley_pattern_message: "Only numbers are allowed" } %>
                        </div>
                    </div>
                </div>
                <div class="row text-danger">
                    <div class="col-md-7">
                        <b><i>***Bank details should belongs to employer, representative is not allowed***</i></b>
                    </div>
                </div>
            <% end %>
            <br>
        <% if @user.employer_supplement_id.blank?  %>
            <%  if ( @employer.approval_status!="UPDATE_PENDING_APPROVAL") %>
                <% if ( @employer_type.try(:id) == 1 &&  @employer.ic_passport_number.blank?) || ( @employer_type.try(:id) == 2 && @employer.business_registration_number.blank?) || @employer.employer_amended_at.nil? %>
                    <div id="editonce">
                        <div class="form-group row">
                            <%=form.label :documents, class: 'form-label required' %>
                            <div class="col-md-6" style="padding-left:120px;">
                                <p style="padding-top: calc(0.375rem + 1px);">Please upload the following documents for verification. Please upload each document separately.</p>

                                <div class="hidden" id="individual_document_list">
                                    <ol class="ol-list-portal">
                                        <li>Your NRIC if you are Malaysian or your passport if you are non-Malaysian</li>
                                    </ol>
                                </div>

                                <div class="" id="company_document_list">
                                    <ol class="ol-list-portal">
                                        <li>Your company's registration paper such as Form 9 or equivalent</li>
                                        <li>Letter of authorization for contact person to perform worker registrations</li>
                                        <li>NRIC of Contact Person to perform worker's registrations</li>
                                    </ol>
                                </div>

                                <div class="hidden" id="maidonline_document_list">
                                    <ol class="ol-list-portal">
                                        <li>Your NRIC if you are Malaysian or your passport if you are non-Malaysian</li>
                                        <li>A copy of the Calling Visa, Worker Permit for a worker/ Application of Foreign Domestic Helper (Maid Online)
                                        </li>
                                    </ol>
                                </div>

                                <p>Please upload only valid files (JPG, PNG, PDF). The total sizes of all files is limited to 10 MB.</p>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-7 offset-md-2">
                                <!-- add more fields or remove them by jquery -->
                                <div class="input-group custom-input-group">
                                    <div class="col-md-4 document-type">
                                        <select class="col-md-12 form-control document-type-selector" name="employer[uploads][][category]">
                                            <option value="">Select option</option>
                                            <% Employer::DOCUMENT_TYPES.each do |document_type, index| %>
                                                <option value="<%= document_type %>"><%= index %></option>
                                            <% end %>
                                        </select>
                                    </div>

                                    <div class="custom-file col-md-6">
                                        <input type="file" name="employer[uploads][][documents]" class="custom-file-input" onchange="validateFiles(this)" disabled>
                                        <label class="custom-file-label"></label>
                                    </div>

                                    <div style="width: 90px;" class="">
                                        <input type="text" style="border-radius: 0; border: 0;" readonly="readonly" class="form-control inline-file-size" placeholder="0 MB" value="">
                                    </div>

                                    <div class="removal-button btn btn-danger font-weight-bold">X</div>
                                </div>

                                <div id="document-input-group"></div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-md-4 col-form-label" for=""></label>
                            <div class="col-md-6">
                                <h6>Total Uploaded Size: <span id="total_uploaded_label">0 MB</span></h6>
                            </div>
                        </div>

                        <div class="form-group row">
                            <%= form.label :submit, class: 'col-md-4 col-form-label' do %>
                            <% end %>
                            <div class="col-md-6 buttons-wrapper"  style="padding-left:20px;">
                                <%= form.button 'Add more documents', id: 'add_more_documents', class: 'btn btn-success float-left',style:'margin-left: 50px;', type: 'button' %>
                            </div>
                        </div>
                        <div class="form-group row mt-6">
                            <label class="col-form-label" style="margin-right:69px;">Pending Documents</label>
                            <div class="col-md-7">
                                <textarea class="form-control" readonly="readonly" data-parsley-uploaded-documents="" data-parsley-validate-if-empty="" name="" id="employer_pending_documents" rows="5"></textarea>
                            </div>
                        </div>
                    </div>
                <% end %>
            <% end %>
             <div class="card-footer border-0 bg-transparent text-dark text-right">
                <a class="btn btn-red-portal" href="#">Cancel</a>
                <button class="btn btn-blue-portal " type="submit" name="submit" value="Save">Save</button>
            </div>
        <% end %>
        </div>
    </div>
<% end %>

<% content_for :page_end_scripts do %>
<script>
    <% if @employer.try(:employer_type_id) != 2 %>
        $('#employer_bank_payment_id').prop('disabled', true);
    <% end %>

    $(document).ready(function() {

        // set upload category option
        setUploadCategoryOption();
        // re-set pending documents
        syncPendingDocuments();

        <% if @employer.try(:employer_type_id) == 1 %>
            var disabled = document.getElementById("ic_passport_number").disabled;
        <% elsif @employer.try(:employer_type_id) == 2 %>
            var disabled = document.getElementById("business_registration_number").disabled;
        <% end %>

            if (disabled) {
                $("#editonce").find("*").prop('disabled', true);
            }
    });

    function edit(){

        <% if @employer.try(:employer_type_id) == 1 %>
            var disabled = document.getElementById("ic_passport_number").disabled;
            if (disabled) {
                document.getElementById("ic_passport_number").disabled = false;
                $("#editonce").find("*").prop('disabled', false);
            }
            else {
                document.getElementById("ic_passport_number").disabled = true;
                $("#editonce").find("*").prop('disabled', true);
            }
        <% elsif @employer.try(:employer_type_id) == 2 %>
            var disabled = document.getElementById("business_registration_number").disabled;
            if (disabled) {
                document.getElementById("business_registration_number").disabled = false;
                $("#editonce").find("*").prop('disabled', false);
            }
            else {
                document.getElementById("business_registration_number").disabled = true;
                $("#editonce").find("*").prop('disabled', true);
            }
        <% end %>
    }

    function setUploadCategoryOption() {

        var employer_type_id = <%= @employer.try(:employer_type_id) %>

        if (employer_type_id == 1) {
            var employer_type='individual';
            $('#individual_document_list').show();
            $('#company_document_list').hide();
        }
        if (employer_type_id == 2) {
            var employer_type= 'company';
            $('#individual_document_list').hide();
            $('#company_document_list').show();
        }
            $('.document-type-selector').each(function (index, obj) {

                // clear existing option-

                $(obj).empty();

                // append new option based on the employer type

                $(obj).append(new Option('Select option', ''));

                var needed_validate_documents = required_documents[employer_type];

                needed_validate_documents.forEach(function (document_type) {

                    var document_type_label = document_types[document_type];

                    $(obj).append(new Option(document_type_label, document_type));
                });

            });

        // clone select option after updating the option

        cloneSelect(employer_type);
    }

    function cloneSelect(employer_type) {
        window['cloned_' + employer_type + '_select'] = $('.custom-input-group:first').clone(true, true);
    }

    // re-sync pending documents

    function syncPendingDocuments() {

        var pending_uploads = getPendingUploads();

        if (!pending_uploads) {
            return false;
        }

        setPendingDocuments(pending_uploads);
    }

    function getPendingUploads() {

        var employer_type_id = <%= @employer.try(:employer_type_id) %>
        if (employer_type_id == 1) {
            var employer_type='individual';
            $('#individual_document_list').show();
            $('#company_document_list').hide();
        }
        if (employer_type_id == 2) {
            var employer_type= 'company';
            $('#individual_document_list').hide();
            $('#company_document_list').show();
        }

        var needed_validate_documents = required_documents[employer_type];

        // var pending_uploads = needed_validate_documents;
        var pending_uploads = needed_validate_documents.slice();

        // console.log(needed_validate_documents);

        $('.custom-input-group').each(function (index, obj) {

            var document_type = $(obj).find('.document-type-selector').val();

            var selected_file = $(obj).find('.custom-file-input').val();

            // check if this document needed by current employer type
            // if yes we need to check file exist

            if (needed_validate_documents.includes(document_type)) {

                // if valid upload

                if (selected_file) {

                    // remove from pending uploads

                    for( var i = 0; i < pending_uploads.length; i++){
                        if ( pending_uploads[i] === document_type) {
                            pending_uploads.splice(i, 1);
                        }
                    }
                }
            }

        });

        return pending_uploads;
    }

    function setPendingDocuments(pending_uploads) {

        var pending_list = '';

        pending_uploads.forEach(function (document_type) {

            var document_type_label = document_types[document_type];

            pending_list = pending_list + document_type_label + '\n';
        });

        var pending_documents = $("#employer_pending_documents");

        // reset pending list

        pending_documents.val('');

        pending_documents.val(pending_documents.val() + pending_list);
    }

    var document_types = <%= Employer::DOCUMENT_TYPES.to_json.html_safe %>;

    var required_documents = {
            company: [
                    'COMPANY_REGISTRATION_PAPER',
                    'LETTER_OF_AUTHORIZATION',
                    'CONTACT_PERSON_NRIC',
                ],
            individual: [
                    'NRIC_PASSPORT',
                ],
        };

    window
        .Parsley
        .addValidator('uploadedDocuments', {
            requirementType: 'string',
            validateString: function (value, requirement) {

                var pending_uploads = getPendingUploads();

                // if there is still pending documents, return false

                if (pending_uploads.length > 0) {

                    // append to pending list

                    setPendingDocuments(pending_uploads);

                    // return false validation of there is documents pending

                    return false;
                }

                return true;
            },
            messages: {
                en: 'You must upload all the required documents',
            }
        });

    $("#profile_form").parsley({
        errorClass: 'is-invalid text-danger',
        errorsWrapper: '<div class="invalid-feedback"></div>',
        errorTemplate: '<span></span>',
        trigger: 'change'
    });

    $('.custom-file-input').change(function() {
        let filePath = $(this).val().split("\\")
        let fileName = filePath[filePath.length - 1]
        if (fileName != "")
            $(this).siblings('.custom-file-label').html(fileName)
        else
            $(this).siblings('.custom-file-label').html("")
    });
    // Function to duplicate document fields


    // define default clone

    var cloned_company_select = null;
    var cloned_individual_select = null;

    function getActiveEmployerType() {
        var employer_type_id = <%= @employer.try(:employer_type_id) %>
        if (employer_type_id == 1) {
            return 'individual';
        }

        if (employer_type_id === 2) {
            return 'company';
        }
        return 'null';
    }

    // if not yet select employer type but click Add documents

    if (!getActiveEmployerType()) {
        var clonedAttachmentInput = $('.custom-input-group:first').clone(true, true);
    }


    $('#add_more_documents').click(() => {

        var employer_type = getActiveEmployerType();

        if (getActiveEmployerType()) {
            clonedAttachmentInput = window['cloned_' + employer_type + '_select'];
        }

        clonedAttachmentInput
            .clone(true,true)
            .appendTo("#document-input-group")
            .addClass('top-margin')
            .find(".custom-file-input")
            .val("")
            .attr("disabled", "disabled")
            $('.custom-input-group:last')
            .find(".custom-file-label").html("")
            bindLastDocumentTypeSelectorAndFileSelector();

        removeAttachmentField('.removal-button:last');


    });

    removeAttachmentField('.removal-button:last');

    function removeAttachmentField(field) {
        $(field).click(function() {
            $(this).closest('.custom-input-group').remove();

            syncPendingDocuments();
        });
    }

    bindLastDocumentTypeSelectorAndFileSelector();

    // Function to re-enable form input after selecting dom type & to set file name after selecting in input
    function bindLastDocumentTypeSelectorAndFileSelector() {
        $('.custom-file-input:last').change(function() {
            let filePath = $(this).val().split("\\")
            let fileName = filePath[filePath.length - 1]
            if (fileName != "")
                $(this).siblings('.custom-file-label').html(fileName)
            else
                $(this).siblings('.custom-file-label').html("Choose file")
        });

        $('.document-type-selector:last').change(function() {
            let selectedValue = $("option:selected", this).val();
            inputField = $(this).closest('.custom-input-group').find(".custom-file input");

            if (selectedValue.length > 0) {
                inputField.removeAttr('disabled');
            } else {
                inputField.attr("disabled", "disabled")
            }
        });
    }

    $('.set-deletion').click(function() {
        filenames = $(this).closest('tr').find('.filenames');
        filenames.toggleClass('text-decoration-line-through');
        text = $(this).hasClass('btn-danger') ? 'Undo Remove' : 'Remove';
        $(this).text(text).toggleClass('btn-danger btn-primary');

        ids = $('.set-deletion.btn-primary').map(function() {
            return $(this).attr('data-id');
        }).get().join(',');

        $('#remove_uploaded_file').val(ids);
    });


     function validateFiles(inputFile) {

        var maxExceededMessage = "This file exceeds the maximum allowed file size (10 MB)";
        var extErrorMessage = "Only image file with extension: .jpg, .jpeg, .gif or .png is allowed";
        var allowedExtension = ["jpg", "jpeg", "png", "pdf"];

        var extName;
        var maxFileSize = <%= 10.megabytes %>;
        var sizeExceeded = false;
        var extError = false;

        var total_uploaded_size = getTotalUploadedSize();

        var file = inputFile.files[0];

        var file_size = file.size;

        // check if single file exceed max file size

        if (file_size && maxFileSize && file_size > parseInt(maxFileSize)) {
            sizeExceeded = true;
        };

        // check if combine with previous file will exceed max file size

        var combine_size = (file_size + total_uploaded_size) - file_size;

        if (combine_size > parseInt(maxFileSize)) {
            sizeExceeded = true;
        };

        extName = file.name.split('.').pop().toLowerCase();

        if ($.inArray(extName, allowedExtension) == -1) { extError = true; };

        if (sizeExceeded) {
            window.alert(maxExceededMessage);
            $(inputFile).val('');
        }

        if (extError) {
            window.alert(extErrorMessage);
            $(inputFile).val('');
        }

        // set inline size

        var file_size_label = getUploadSizeLabel(file_size);

        $(inputFile).closest('div').next().find('.inline-file-size').val(file_size_label);

        // set label

        setTotalUploadLabel();

        // sync pending documents

        syncPendingDocuments();
    }


    function getTotalUploadedSize() {

        var total_uploaded_size = 0;

        $('.custom-file-input').each(function (index, obj) {

            if (obj.files.length > 0) {
                total_uploaded_size = total_uploaded_size + parseFloat(obj.files[0].size);
            }

        });

        return total_uploaded_size;
    }

    function setTotalUploadLabel() {

        var total_uploaded_size = getTotalUploadedSize();

        var total_uploaded_label =  getUploadSizeLabel(total_uploaded_size);

        $("#total_uploaded_label").text(total_uploaded_label);
    }

    function getUploadSizeLabel(upload_size) {

        var total_mb = upload_size / 1000000;

        total_mb = total_mb.toFixed(2);

        var upload_size_label = total_mb + ' MB';

        return upload_size_label;
    }


</script>
<% end %>