<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>

<div id="sidebar">
  <div class="filter_row">
    <div class="filter_div mt-0">
      <div class="filter">
        <div class="filter-title">
          Filter By
        </div>
        <div class="filter-body">
          <div id="main">
            <div class="filtereaccordion" id="filter">
              <div class="card">
                <div class="card-header" id="faqhead1">
                  <a href="#" class="filter-link" data-toggle="collapse" data-target="#time-period"
                     aria-expanded="true" aria-controls="time-period">
                    Time Period</a>
                </div>
                <div id="time-period" class="collapse show" aria-labelledby="faqhead1" data-parent="#filter">
                  <div class="card-body">
                    <script>
                        $.noConflict();
                        jQuery(document).ready(function ($) {
                            $(document).ready(function () {
                                $('#date-range').daterangepicker({
                                    opens: 'left',
                                    drops: 'down',
                                    autoApply: true,
                                    locale: {
                                        format: 'YYYY-MM-DD',
                                        separator: ' - ',
                                        applyLabel: 'Apply',
                                        cancelLabel: 'Cancel',
                                        fromLabel: 'From',
                                        toLabel: 'To',
                                        customRangeLabel: 'Custom',
                                        daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                                        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                                        firstDay: 0
                                    }
                                });
                            });
                        });
                    </script>
                    <div class="input-group date-range">
                      <input type="text" class="form-control date-range" id="date-range" placeholder="Select Date Range">
                      <div class="input-group-append">
                                    <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                    </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="card">
                <div class="card-header" id="filter2">
                  <a href="#" class="filter-link collapsed" data-toggle="collapse" data-target="#doctorcode" aria-expanded="true" aria-controls="doctorcode">Doctor
                    Code</a>
                </div>
                <div id="doctorcode" class="collapse" aria-labelledby="filter2" data-parent="#filter">
                  <div class="card-body">
                    <ul class="subment-li">
                      <li>
                        <input type="text" class="form-control" id='txtdoctor'>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <div class="card">
                <div class="card-header" id="filter3">
                  <a href="#" class="filter-link collapsed" data-toggle="collapse" data-target="#xray" aria-expanded="true" aria-controls="xray">X-ray
                    Facility Code</a>
                </div>
                <div id="xray" class="collapse" aria-labelledby="filter3" data-parent="#filter">
                  <div class="card-body">
                    <ul class="subment-li">
                      <li>
                        <input type="text" class="form-control" id='txtxray'>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <div class="card">
                <div class="card-header" id="filter4">
                  <a href="#" class="filter-link collapsed" data-toggle="collapse" data-target="#laboratory" aria-expanded="true" aria-controls="laboratory">Laboratory
                    Code</a>
                </div>
                <div id="laboratory" class="collapse" aria-labelledby="filter4" data-parent="#filter">
                  <div class="card-body">
                    <ul class="subment-li">
                      <li>
                        <input type="text" class="form-control" id='txtlab'>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <div class="filter-btn mb-2">
                <button class="btn-apply" data-toggle="collapse" data-target="#tag_demo" onclick="apply_filter()">Apply</button>
                <button class="btn-clear" onclick="clear_filter()">Clear</button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">

    function clearAllInputs() {
        // Clear checkboxes
        $('input[type="checkbox"]').prop('checked', false);


        // Clear input fields
        $('input[type="text"]').val('');

        // Clear date range picker (if you're using a library like 'daterangepicker')
        $('#date-range').val('');

    }

    function closeSidebar() {
        // Close the sidebar by removing the 'active' class
        $('#sidebar').removeClass('active');
    }

    function clear_filter() {
        location.reload();
    }

    var checkedValues = {};

    function getCheckedValues() {
        // Retrieve values from Sector
        checkedValues['DateRange'] = $('#date-range').val();
        checkedValues['doctor'] = $('#txtdoctor').val();
        checkedValues['xray'] = $('#txtxray').val();
        checkedValues['lab'] = $('#txtlab').val();
        updateDisplayedValues(checkedValues);
        return checkedValues;


    }

    function apply_filter() {

        if ($('#txtdoctor').val() != "") {
            $('#divcertdoctor').css("display", "block");
            $('#divdoctortransm').css("display", "block");
            $('#divlabtrans').css("display", "none");
            $('#divxrayquality').css("display", "none");
            $('#divxraytrans').css("display", "none");
        } else if ($('#txtxray').val() != "") {
            $('#divcertdoctor').css("display", "none");
            $('#divdoctortransm').css("display", "none");
            $('#divlabtrans').css("display", "none");
            $('#divxrayquality').css("display", "block");
            $('#divxraytrans').css("display", "block");
        } else if ($('#txtlab').val() != "") {
            $('#divcertdoctor').css("display", "none");
            $('#divdoctortransm').css("display", "none");
            $('#divlabtrans').css("display", "block");
            $('#divxrayquality').css("display", "none");
            $('#divxraytrans').css("display", "none");
        }
        if ($('#txtdoctor').val() != "" && $('#txtxray').val() != "") {
            $('#divcertdoctor').css("display", "block");
            $('#divdoctortransm').css("display", "block");
            $('#divlabtrans').css("display", "none");
            $('#divxrayquality').css("display", "block");
            $('#divxraytrans').css("display", "block");
        }
        if ($('#txtdoctor').val() != "" && $('#txtxray').val() != "" && $('#txtlab').val() != "") {
            $('#divcertdoctor').css("display", "block");
            $('#divdoctortransm').css("display", "block");
            $('#divlabtrans').css("display", "block");
            $('#divxrayquality').css("display", "block");
            $('#divxraytrans').css("display", "block");
        }

        var selectedValues = JSON.stringify(getCheckedValues());
        updateQuotaChartAfterFilter(selectedValues);
        updateDoctorDonut(selectedValues);
        updateDoctorAccuracy(selectedValues);
        updateLabResult(selectedValues);
        updateXrayTrans(selectedValues);
        updateXrayComp(selectedValues);

        closeSidebar();
        console.log(selectedValues);
        const url = '/dashboards/service_provider/apply_filter';
        $.ajax({
                type: 'GET',
                url: url,
                data: {filter_params: selectedValues},
                dataType: 'json',
                success: function (response) {
                    console.log('Response of apply filter:', response);
                    const doctorGrade = response.doctorgrade;
                    const xrayGrade = response.xray_grade;
                    const labGrade = response.lab_grade;
                    let imagetag;
                    if (doctorGrade === 'A' || xrayGrade === 'A' || labGrade === 'A') {
                        imagetag = '<%= image_tag "dashboards/service_provider/gradeA.png",  style: "width: 20px;" %>';
                    } else if (doctorGrade === 'B' || xrayGrade === 'B' || labGrade === 'B') {
                        imagetag = '<%= image_tag "dashboards/service_provider/gradeB.png",  style: "width: 20px;" %>';
                    } else if (doctorGrade === 'C' || xrayGrade === 'C' || labGrade === 'C') {
                        imagetag = '<%= image_tag "dashboards/service_provider/gradeC.png", style: "width: 20px;" %>';
                    } else if (doctorGrade === 'D' || xrayGrade === 'D' || labGrade === 'D') {
                        imagetag = '<%= image_tag "dashboards/service_provider/gradeD.png",  style: "width: 20px;" %>';
                    } else if (doctorGrade === 'E' || xrayGrade === 'E' || labGrade === 'E') {
                        imagetag = '<%= image_tag "dashboards/service_provider/gradeE.png",  style: "width: 20px;" %>';
                    }

                    const doctorimageContainer = document.getElementById('doctorGradeImageContainer');
                    const xrayimageContainer = document.getElementById('xrayGradeImageContainer');
                    const labimageContainer = document.getElementById('labGradeImageContainer');
                    doctorimageContainer.innerHTML = imagetag;
                    labimageContainer.innerHTML = imagetag;
                    xrayimageContainer.innerHTML = imagetag;

                    $('#doctorStatesList').empty();
                    Object.keys(response.doctorsstates).forEach(function (state) {
                        var count = response.doctorsstates[state];
                        $('#doctorStatesList').append('<li><span>' + state + '</span> <span id="' + state.replace(/\s+/g, '') + 'Count">' + count + '</span></li>');
                    });
                    $('#doctorsactive').html(response.doctorsactive);
                    $('#newCount').text(response.doctorsnew);
                    $('#withdrawalCount').text(response.doctorswithdrawal);
                    $('#demisedCount').text(response.doctorsdemised);
                    $('#noncompCount').text(response.doctorsnoncomp);


                    $('#labStatesList').empty();
                    Object.keys(response.laboratoriesstates).forEach(function (state) {
                        var count = response.laboratoriesstates[state];
                        $('#labStatesList').append('<li><span>' + state + '</span> <span id="' + state.replace(/\s+/g, '') + 'Count">' + count + '</span></li>');
                    });
                    $('#laboratoriesactive').html(response.laboratoriesactive);
                    $('#newlabCount').text(response.laboratoriesnew);
                    $('#withdrawallabCount').text(response.laboratorieswithdrawal);
                    $('#demisedlabCount').text(response.laboratoriesdemised);
                    $('#noncomplabCount').text(response.laboratoriesnoncomp);

                    $('#xrayStatesList').empty();
                    Object.keys(response.xrayfacilitiesstates).forEach(function (state) {
                        var count = response.xrayfacilitiesstates[state];
                        $('#xrayStatesList').append('<li><span>' + state + '</span> <span id="' + state.replace(/\s+/g, '') + 'Count">' + count + '</span></li>');
                    });
                    $('#xrayactive').html(response.xrayfacilityactive);
                    $('#newxrayCount').text(response.xrayfacilitynew);
                    $('#withdrawalxrayCount').text(response.xrayfacilitywithdrawal);
                    $('#demisedxrayCount').text(response.xrayfacilitydemised);
                    $('#noncompxrayCount').text(response.xrayfacilitynoncomp);


                    $('#radioStatesList').empty();
                    Object.keys(response.radiologiststates).forEach(function (state) {
                        var count = response.radiologiststates[state];
                        $('#radioStatesList').append('<li><span>' + state + '</span> <span id="' + state.replace(/\s+/g, '') + 'Count">' + count + '</span></li>');
                    });
                    $('#newradioCount').html(response.radiologistactive);
                    $('#newradioCount').text(response.radiologistnew);
                    $('#withdrawalradioCount').text(response.radiologistwithdrawal);
                    $('#demisedradioCount').text(response.radiologistdemised);
                    $('#noncompradioCount').text(response.radiologistnoncomp);

                }
            }
        )
    }

    function updateQuotaChartAfterFilter(selectedValues) {
        $.ajax({
            url: '/dashboards/service_provider/quota_usage_by_doctor',
            method: 'GET',
            dataType: 'json',
            data: {filter_params: selectedValues},
            success: function (data) {
                if (selectedValues['doctor']) {
                    data = {
                        zero: data.zero,
                        oneToHundred: data.oneToHundred,
                        oneTwoHundred: data.oneTwoHundred,
                        ThreeHundred: data.ThreeHundred,
                        fourHundred: data.fourHundred,
                        fiveHundred: data.fiveHundred,
                        sixHundred: data.sixHundred,
                        sevenHundred: data.sevenHundred,
                        eightHundred: data.eightHundred
                    };
                }
                updateChart(data);
            },
            error: function () {
                // Handle errors here
                console.error('Failed to fetch quota data.');
            }
        });
    }

    function updateDoctorDonut(selectedValues) {
        $.ajax({
            url: '/dashboards/service_provider/certification_by_doctor',
            method: 'GET',
            dataType: 'json',
            data: {filter_params: selectedValues},
            success: function (data) {
                if (selectedValues['doctor']) {
                    data = {
                        certification_by_doc: data.certification_by_doc
                    };
                }
                updateChartCert(data);
            },
            error: function () {
                // Handle errors here
                console.error('Failed to fetch quota data.');
            }
        });
    }

    function updateDoctorAccuracy(selectedValues) {
        $.ajax({
            url: '/dashboards/service_provider/accuracy_transmission',
            method: 'GET',
            dataType: 'json',
            data: {filter_params: selectedValues},
            success: function (data) {
                if (selectedValues['doctor']) {
                    data = {
                        accuracy_transmission: data.accuracy_transmission
                    };
                }
                updateChartAccuracy(data);
            },
            error: function () {
                // Handle errors here
                console.error('Failed to fetch data.');
            }
        });
    }

    function updateLabResult(selectedValues) {
        $.ajax({
            url: '/dashboards/service_provider/laboratory_result_transmission',
            method: 'GET',
            dataType: 'json',
            data: {filter_params: selectedValues},
            success: function (data) {
                if (selectedValues['lab']) {
                    data = {
                        labwithin48: data.labwithin48,
                        labbeyond48: data.labbeyond48
                    };
                }
                updateLabTransmission(data);
            },
            error: function () {
                // Handle errors here
                console.error('Failed to fetch data.');
            }
        });
    }

    function updateXrayTrans(selectedValues) {
        $.ajax({
            url: '/dashboards/service_provider/xray_transmission',
            method: 'GET',
            dataType: 'json',
            data: {filter_params: selectedValues},
            success: function (data) {
                if (selectedValues['xray']) {
                    data = {
                        xray_transmission: data.xray_transmission,
                        self_reporting: data.self_reporting,
                        radiologist_reporting: data.radiologist_reporting
                    };
                }
                updateXrayTransmission(data);
            },
            error: function () {
                // Handle errors here
                console.error('Failed to fetch data.');
            }
        });
    }


    function updateXrayComp(selectedValues) {
        $.ajax({
            url: '/dashboards/service_provider/xray_compliance',
            method: 'GET',
            dataType: 'json',
            data: {filter_params: selectedValues},
            success: function (data) {
                if (selectedValues['xray']) {
                    data = {
                        xray_compliance: data.xray_compliance,
                    };
                }
                updateXrayCompliance(data);
            },
            error: function () {
                // Handle errors here
                console.error('Failed to fetch data.');
            }
        });
    }


</script>