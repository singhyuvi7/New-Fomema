wb = xlsx_package.workbook

wb.styles do |s|
  # worksheet styles
  title_style = s.add_style :b=>true, :sz=>11, :u=>true, :alignment => {:vertical=> :center}
  header_style = s.add_style(b: true, sz: 11, bg_color: 'c8ced3', border: { style: :thin, color: '000000', edges: [:top, :bottom, :left, :right] }, alignment: {:horizontal => :center, :vertical => :center, :wrap_text => true})
  data_style = s.add_style border: Axlsx::STYLE_THIN_BORDER
  total_style = s.add_style(b: true, border: { style: :thin, color: '000000', edges: [:top, :bottom, :left, :right] })
  col_widths = [15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,10]

  # worksheet data
  wb.add_worksheet(name: 'Insurance Details') do |sheet|
    # sector statistics data
    sheet.add_row ["#{@company_name.to_s.upcase} - #{@date}"], style: title_style
    sheet.add_row ["DETAILS WORKER INSURANCE REPORT FROM #{@start_date.try(:to_date).try(:strftime,'%d/%m/%Y')} TO #{@end_date.try(:to_date).try(:strftime,'%d/%m/%Y')} FOR #{!@branch_id.blank? ? Organization.find(@branch_id).try(:name) : 'ALL BRANCH'}"], style: title_style
    sheet.column_widths 15

    sheet.add_row

    sheet.add_row ["DATE","BRANCH","CREATED_BY","PAYMENT METHOD","PAYMENT NO","ORDER CODE","EMPLOYER CODE","EMPLOYER NAME",
    "WORKER CODE","WORKER NAME","GENDER","COUNTRY","INSURANCE PROVIDER","INSURER",
    "GROSS PREMIUM","TOTAL ADMIN\rFEE",
    "TOTAL SST\rON TOTAL\rGROSS\rPREMIUM","TOTAL SST\rON TOTAL\rADMIN FEE","TOTAL STAMP\rDUTY",
    "TOTAL PREMIUM\rPAID (TOTAL GROSS\rPREMIUM + TOTAL\rADMIN FEE + TOTAL\rSST ON TOTAL\rGROSS PREMIUM +\rTOTAL SST ON TOTAL\rADMIN FEE +\rSTAMP DUTY)","COMMISSION\r(n% x GROSS\rPREMIUM)",
    "PAYMENT CHARGES\r(TOTAL PREMIUM\rPAID x PERCENTAGE\rCHARGED BY\rPAYMENT METHOD)",
    "AMOUNT PAID TO\rINSURANCE SERVICE PROVIDER\r(TOTAL PREMIUM\rPAID - COMMISSION\r- PAYMENT\rCHARGES)"], style: header_style
    sheet.column_widths *col_widths

    total_commission = 0
    total_payment_charges = 0
    total_amount_to_howden = 0

    if @data.present?
      @data.each do |order|
        sst = order.order_items.get_insurance_sst.sum('order_items.amount')
        stamp_duty = order.order_items.get_insurance_stamp_duty.sum('order_items.amount')
        adminfees = order.order_items.get_insurance_adminfees.sum('order_items.amount')
        adminfees_sst = order.order_items.get_insurance_adminfees_sst.sum('order_items.amount')
        gross_premium = order.order_items.get_insurance_gross_premium.sum('order_items.amount')
        total_premium_paid = [gross_premium,adminfees,sst,adminfees_sst,stamp_duty].sum
        commission = "%.2f" % ((order&.insurance_payment&.commission_percentage || 0)/100*gross_premium)
        payment_charges = "%.2f" % ((order&.insurance_payment&.transaction_fee || 0)/100*total_premium_paid)
        amount_to_howden = total_premium_paid.to_f-commission.to_f-payment_charges.to_f

        payment_no = order.payment_method&.is_ipay? ? Ipay88Response.where(ipay88_request_id: order.latest_ipay88_request.try(:id)).where(:status => '1').last.try(:transaction_id) : order.payment_method&.is_swipe? ? SwipeResponse.where(swipe_request_id: order.latest_swipe_request.try(:id)).where(:status => '1').last.try(:transaction_id) : order.payment_method&.is_fpx? ? FpxResponse.where(fpx_request_id: order.latest_fpx_request.try(:id)).where(:debit_auth_code => '00').last.try(:fpx_txn_id) : order.payment_method&.is_boleh? ? BolehResponse.where(boleh_request_id: order.latest_boleh_request.try(:id)).where(:status => 'approved').last.try(:transaction_id) : order.latest_order_payment.try(:reference)

        order.order_items.get_insurance_gross_premium.each.with_index(1) do |order_item,index|
          insurance_purchase = order_item.insurance_purchase

          first_row = [order.paid_at.try(:to_date).try(:strftime,'%d/%m/%Y'), order.organization.name, User.find(order.created_by).code,
          order.payment_method.name, payment_no,
          order.code, insurance_purchase&.emp_code, insurance_purchase&.emp_name]
          other_row = ['','','','','','','','']

          row_details = [insurance_purchase&.fw_code, insurance_purchase&.fw_name, insurance_purchase&.fw_gender, insurance_purchase&.fw_country&.name, InsuranceServiceProvider.find_by(id: insurance_purchase&.insurance_service_provider_id)&.name, insurance_purchase&.insurance_provider,
          insurance_purchase&.gross_premium,'','','','','','','','']

          sheet.add_row (index == 1 ? first_row+row_details : other_row+row_details), style: data_style, :types => [nil,nil,nil,nil, :string]
        end
        total_commission += commission.to_f
        total_payment_charges += payment_charges.to_f
        total_amount_to_howden += amount_to_howden.to_f

        sheet.add_row ['','','','','','','','','','','','','','TOTAL',gross_premium, adminfees, sst, adminfees_sst, stamp_duty, total_premium_paid, commission, payment_charges, amount_to_howden], style: total_style
        sheet.add_row ['','','','','','','','','','','','','','','','','','','','','','',''], style: data_style
      end
    end

    sheet.add_row ['','','','','','','','','','','','','','GRAND TOTAL',@total_gross_premium,@total_adminfees,
    @total_sst, @total_adminfees_sst, @total_stamp_duty,
    @total_premium_paid, total_commission, total_payment_charges, total_amount_to_howden], style: total_style
  end
end
