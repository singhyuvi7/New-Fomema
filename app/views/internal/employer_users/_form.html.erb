<div class="card-body">

    <%=render "/shared/all_flash" %>
    <%= render 'shared/all_validation_flash', { model_obj: @user } %>

    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <%= form.label :role_id, class: 'required' %>
                <%= form.hidden_field :role_id %>
                <%= form.select :role_id, options_from_collection_for_select(Role.where("category = ?", 'Employer').order(:name).all, 'id', 'name', form.object.role_id), {include_blank: form_select_option_text}, required: true, class: 'form-control', disabled: true %>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :name, @user.role.code.eql?("EMPLOYER_SUPPLEMENTAL") ? "Company Name" : "Name", class: 'required' %>
                <%= form.text_field :name, class: 'form-control', required: true, data: { parsley_maxlength: "150", parsley_maxlength_message: "Maximum length of 150 characters", parsley_pattern: "^[a-zA-Z0-9].*", parsley_pattern_message: "Name must not begin with a special characters" } %>
            </div>
        </div>
        <% if ["edit", "update"].include?(params[:action]) %>
            <div class="col-md-6">
                <div class="form-group">
                    <%= form.label :status, class: 'required' %>
                    <%= form.select :status, options_for_select(User::STATUSES.invert, form.object.status), {include_blank: form_select_option_text}, required: true, class: 'form-control' %>
                </div>
            </div>
        <% end %>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :username, class: 'required' %>
                <%= form.text_field :username, class: 'form-control', required: true %>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :email, class: 'required' %>
                <%= form.email_field :email, class: 'form-control', required: true, data: { parsley_maxlength: "100", parsley_maxlength_message: "Maximum length of 100 characters" } %>
            </div>
        </div>
    </div>

    <% if !["new", "create"].include?(params[:action]) %>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <%= form.label :password %>
                    <%= form.text_field :password, class: 'form-control no-uppercase', placeholder: 'Key in to change password', validate: 'false' %>
                    <br>
                    <%= button_tag 'Generate Password', id: 'generate_password', type: 'button', class: 'btn btn-sm btn-primary' %>

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <%= form.label :password_confirmation, "Confirm Password" %>
                    <%= form.text_field :password_confirmation, class: 'form-control no-uppercase' %>
                </div>
            </div>
        </div>
    <% end %>

    <% if @role.code.eql?("EMPLOYER_SUPPLEMENTAL") %>
        <%=render "supplemental_form", {form: form} %>
    <% end %>

</div>

<div class="card-footer">

    <div class="text-right">
        <%=raw edit_back_button(internal_employer_employer_users_path) %>
        <%=raw edit_save_button() %>
    </div>

</div>

<% content_for :page_end_scripts do %>

<script>

function generatePassword() {
    var eachLength = <%= PasswordPolicy.maximum(:minimum_length).fdiv(4).ceil %>;

    var ret = '';
    [
        "abcdefghijklmnopqrstuvwxyz",
        "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        "0123456789",
        "?*#!@$%^&*-"
    ].forEach(function (charset) {
        ret += randomString(eachLength, charset);
    });

    return shuffle(ret);
}

$('#generate_password').click(function () {
    var password = generatePassword();
    $('#user_password').val(password);
    $('#user_password').trigger('change');
    $('#user_password_confirmation').val(password);
})

$('#user_password').change(function (e) {
    if ($(e.target).val().length > 0) {
        $('#user_password_confirmation').attr('required', 'required') && $('label[for="user_password_confirmation"]').addClass("required");
    } else {
        $('#user_password_confirmation').attr('required', false) && $('label[for="user_password_confirmation"]').removeClass("required");
    }
});


$('#employer_supplement_state_id').change(function () {

    // empty town and postcode

    $('#employer_supplement_town_id').html('<option value><%= form_select_option_text %></option>');
    $('#employer_supplement_postcode').val('');

    if (this.value) {

        $.ajax({
            url: '/states/' + this.value + '/towns.json',
            method: "GET",
        }).done(function (data) {
            $.each(data, function (idx, town) {
                $('#employer_supplement_town_id').append('<option value="'+town.id+'" data-postcode_id="'+town.postcode_id+'" data-postcode_code="'+town.postcode_code+'">'+town.name+'</option>');
            });
        });

    }

});

</script>
<% end %>
