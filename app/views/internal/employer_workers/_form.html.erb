<div class="card-body">

    <%= render 'shared/all_validation_flash', { model_obj: @foreign_worker} %>
    <%=render "/shared/all_flash" %>

    <% if ['edit', 'update'].include? params[:action] %>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <%= form.label :code, class: '' %>
                    <%= form.text_field :code, class: 'form-control', disabled: true %>
                </div>
            </div>
        </div>
    <% end %>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :name, class: 'required' %>
                <div class="input-group">
                    <%= form.text_field :name, class: 'critical-field form-control', required: true, placeholder: '', id: "name", data: { parsley_maxlength: "150", parsley_maxlength_message: "Maximum length of 150 characters", parsley_pattern: "[a-zA-Z0-9@&.'()-_/\s]+", parsley_pattern_message: "Only alphabets, numbers, underscore(_), hypens (-), fullstops (.), alias (@), ampersand (&), apostrophe('), brackets and slashes (/) are allowed" } %>
                    <div class="input-group-append">
                        <button type="button" data-toggle="popover" data-placement="right" data-html="true" data-content='<%= image_tag("forms/callingvisacompany1.png", :style => "width: 300px;")%><h6>Or</h6><%= image_tag("forms/workPermitNew.png", :style => "width: 300px;")%>' title="" class="input-group-text btn btn-primary btn-sm">
                            <i class="fa fa-info-circle"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :passport_number, "Passport Number", class: 'required' %>
                <%= form.text_field :passport_number, class: 'critical-field form-control', required: true, placeholder: 'A123456', data: { parsley_maxlength: "20", parsley_maxlength_message: "Maximum length of 20 characters", parsley_pattern: "[a-zA-Z0-9\-]+", parsley_pattern_message: "No special characters allowed" } %>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <% if @foreign_worker.code.blank? %>
                <div class="form-group">
                    <% field_id = generate_field_id(form, :gender) %>
                    <label class="required">Gender</label>
                    <div>
                        <div class="form-check form-check-inline">
                            <%= form.radio_button(:gender, "M", class: "critical-field form-check-input", required: true, disabled: ["edit", "update"].include?(params[:action]) && !has_permission?("EDIT_GENDER_FOREIGN_WORKER")) %>
                            <label class="form-check-label" for="foreign_worker_gender_m">Male</label>
                            &emsp;
                            <%= form.radio_button(:gender, "F", class: "critical-field form-check-input", required: true, disabled: ["edit", "update"].include?(params[:action]) && !has_permission?("EDIT_GENDER_FOREIGN_WORKER")) %>
                            <label class="form-check-label" for="foreign_worker_gender_f">Female</label>
                        </div>
                    </div>
                </div>
            <% elsif !@foreign_worker.code.blank? %>
                <!-- button for gender modal -->
                <label>Gender</label>
                <div><%= ForeignWorker::GENDERS[@foreign_worker.gender] %></div>
                <% if has_permission?("EDIT_GENDER_FOREIGN_WORKER") && @foreign_worker.gender_amended_at.blank? %>
                    <div class="mb-3"><button type="button" class="btn btn-warning" data-toggle="modal" data-target="#genderChangeModal">Change Gender (<%= @foreign_worker.gender == 'M' ? "M -> F" : "F -> M" %>)</button></div>
                <% end %>
                <% if !@foreign_worker.gender_amended_at.blank? %>
                    <small><i>(Gender changed on <%= @foreign_worker.gender_amended_at.strftime('%d/%m/%Y') %>)</i></small>
                <% end %>
                <%= form.hidden_field :gender, :value => @foreign_worker.gender %>
            <% end %>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :date_of_birth, "Date of Birth", class: 'required' %>
                <%= form.date_field :date_of_birth, class: 'critical-date critical-field form-control', required: true, min: Date.today - 70.year, max: Date.today - 18.year%>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <% field_id = generate_field_id(form, :country_id) %>
                <%= form.label :country_id, class: 'required' %>
                <%= form.select :country_id, options_from_collection_for_select(Country.where("code != ?", Country::MALAYSIA_CODE).order(:name).all, 'id', 'name', form.object.country_id), {include_blank: form_select_option_text}, required: true, class: 'critical-field form-control select2', data: { parsley_errors_container: "#select2_parsley_error__#{ field_id }", parsley_class_handler: ".select2-selection--single[aria-labelledby=\"select2-#{ field_id }-container\"]", parsley_group: field_id } %>
                <div id="select2_parsley_error__<%= field_id %>"></div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :arrival_date, "Arrival Date", class: '' %>
                <%= form.date_field :arrival_date, class: 'critical-date critical-field form-control', required: false, max: Date.today %>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <% field_id = generate_field_id(form, :job_type_id) %>
                <%= form.label :job_type_id, "Job Type", class: 'required' %>
                <select name="foreign_worker[job_type_id]" id="foreign_worker_job_type_id" class="form-control select2" data-parsley-errors-container="#select2_parsley_error__<%= field_id %>" data-parsley-class-handler=".select2-selection--single[aria-labelledby=\"select2-<%= field_id %>-container\"]" data-parsley-group="<%= field_id %>" required>
                    <option value=""><%= form_select_option_text %></option>
                    <% if @employer.is_individual?
                        job_type = JobType.where(:name => ['DOMESTIC','PLANTATION','AGRICULTURE']).all
                       elsif @employer.is_company?
                        job_type = JobType.where.not(:name => ['DOMESTIC']).all
                       end
                    %>
                    <% job_type.order(:name).each do |jt| %>
                        <option value="<%= jt.id %>" data-name="<%= jt.name %>"
                        <%= " selected" if @foreign_worker.job_type_id == jt.id %>
                        <%= " disabled" if @foreign_worker.is_maid_online? and jt.name != 'DOMESTIC' %>
                        ><%= jt.name %></option>
                    <% end %>
                </select>
                <div id="select2_parsley_error__<%= field_id %>"></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="required">PATI / Rehiring Programme</label>
                <div>
                    <div class="form-check form-check-inline mr-5">
                        <%= form.radio_button(:pati, true, class: "critical-field form-check-input") %>
                        <label class="form-check-label" for="foreign_worker_pati_true">Yes</label>
                        &emsp;
                        <%= form.radio_button(:pati, false, class: "critical-field form-check-input", required: true) %>
                        <label class="form-check-label" for="foreign_worker_pati_false">No</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :plks_number, "PLKS Number", class: 'required' %>
                <div class="form-row">
                    <div class="col-md-11">
                        <%= form.text_field :plks_number, class: 'critical-field form-control', required: true, placeholder: "PLKS NO", maxlength: "2", data: { parsley_maxlength: "2", parsley_maxlength_message: "Maximum length of 2 characters", parsley_pattern: "^[0-9]*", parsley_pattern_message: "PLKS Number can only contain numbers" } %>
                    </div>
                    <div class="col-md-1">
                        <button type="button" data-toggle="popover" data-placement="left" data-html="true"
                            data-content='<%= image_tag("forms/workPermitNew.png", :style => "width: 300px;")%>'
                            title="" class="btn btn-primary btn-sm"><i class="fa fa-info-circle"></i></button>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-11 font-xs font-italic" style="padding-left:10px;">
                        The PLKS number for new arrival worker is #0
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <%= form.label :employer_supplement_id, "Employer Supplemental User" %>
                <%= form.select :employer_supplement_id, options_from_collection_for_select(@employer.employer_supplements.order(:name).all, 'id', 'name', form.object.employer_supplement_id), {include_blank: form_select_option_text}, class: 'form-control select2' %>
            </div>
        </div>
        <!--
        <% if @employer.is_individual? %>
            <div class="col-md-6">
                <div class="form-group">
                    <label><input type="checkbox" name="is_maid_online" id="is_maid_online" value="1"
                    <%= " checked" if @foreign_worker.is_maid_online? %>
                    > Maid Online</label>
                </div>
            </div>
        <% end %>
        -->
        <div class="col-md-6">
            <div class="form-group">
                <label>Programme</label>
                <div>
                    <% #if @employer.is_individual? %>
                        <label>
                            <input type="checkbox" name="programme[]" value="PRAON" <%= "checked" if @foreign_worker.is_maid_online? %> >
                            Maid Online
                        </label>
                    <% #end %>
                    <label>
                        <input type="checkbox" name="programme[]" value="RTK" <%= "checked" if @foreign_worker.is_recalibration? %> >
                        Recalibration
                    </label>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
        <label>Uploaded Document(s)</label><br>
        <label for="employer_uploads">(Passport & Worker Permit)</label>
            <%= hidden_field_tag :remove_uploaded_file, "" %>
            <table class="table table-bordered table-striped ">
                <tr>
                    <th width="20%">Category</th>
                    <th>Documents</th>
                    <th width="15%">Date Uploaded</th>
                    <th width="25%">Uploaded By</th>
                    <th width="150px">Action(s)</th>
                </tr>

                <% @foreign_worker.uploads.where(deleted_at: nil, category: ["PASSPORT","WORKINGPERMIT"]).order(created_at: :desc).each do |upload| %>
                    <tr>
                        <td class="filenames" name="uploadedfilecategory">
                            <%= upload.category %>
                        </td>
                        <td class="filenames" name="uploadedfilename">
                            <% upload.documents.each do |document| %>
                                <div><%= link_to document.filename, rails_blob_url(document), target: "_blank" %></div>
                            <% end %>
                        </td>
                        <td class="filenames"><%= upload.updated_at&.strftime(get_standard_datetime_format) %></td>
                        <td class="filenames"><%= "#{upload.creator&.name} (#{upload.creator&.code})" %></td>
                        <td>
                            <% if has_permission?('DELETE_UPLOAD_DOCUMENT_FOREIGN_WORKER') %>
                                <div class="set-deletion btn btn-danger" style="width: 120px;" data-id="<%= upload.id %>">Remove</div>
                            <% end %>
                        </td>
                    </tr>
                <% end %>

                <% if @foreign_worker.uploads.where(deleted_at: nil, category: ["PASSPORT","WORKINGPERMIT"]).blank? %>
                    <tr><td colspan="5">There are no uploaded documents</td></tr>
                <% end %>
            </table>

            <label>(Suspicious Image)</label>
            <table class="table table-bordered table-striped ">
                <tr>
                    <th width="20%">Category</th>
                    <th>Documents</th>
                    <th width="15%">Date Uploaded</th>
                    <th width="25%">Uploaded By</th>
                    <th width="150px">Action(s)</th>
                </tr>

                <% @foreign_worker.uploads.where(deleted_at: nil, category: ["SUSPICIOUS_IMAGE"]).order(created_at: :desc).each do |upload| %>
                    <tr>
                        <td class="filenames">
                            <%= upload.category%>
                        </td>
                        <td class="filenames">
                            <% upload.documents.each do |document| %>
                                <div><%= link_to document.filename, rails_blob_url(document), target: "_blank" %></div>
                            <% end %>
                        </td>
                        <td class="filenames"><%= upload.updated_at&.strftime(get_standard_datetime_format) %></td>
                        <td class="filenames"><%= "#{upload.creator&.name} (#{upload.creator&.code})" %></td>
                        <td>
                            <% if has_permission?('DELETE_UPLOAD_DOCUMENT_FOREIGN_WORKER') %>
                                <div class="set-deletion btn btn-danger hidden" style="width: 120px;" data-id="<%= upload.id %>">Remove</div>
                            <% end %>
                        </td>
                    </tr>
                <% end %>

                <% if @foreign_worker.uploads.where(deleted_at: nil, category: ["SUSPICIOUS_IMAGE"]).blank? %>
                    <tr><td colspan="5">There are no uploaded documents</td></tr>
                <% end %>
            </table>

            <label>(Verified Image)</label>
            <table class="table table-bordered table-striped ">
                <tr>
                    <th width="20%">Category</th>
                    <th>Documents</th>
                    <th width="15%">Date Uploaded</th>
                    <th width="25%">Uploaded By</th>
                    <th width="150px">Action(s)</th>
                </tr>

                <% @foreign_worker.uploads.where(deleted_at: nil, category: ["FOREIGN_WORKER_IMAGE"]).order(created_at: :desc).each do |upload| %>
                    <tr>
                        <td class="filenames">
                            <%= upload.category%>
                        </td>
                        <td class="filenames">
                            <% upload.documents.each do |document| %>
                                <div><%= link_to document.filename, rails_blob_url(document), target: "_blank" %></div>
                            <% end %>
                        </td>
                        <td class="filenames"><%= upload.updated_at&.strftime(get_standard_datetime_format) %></td>
                        <td class="filenames"><%= "#{upload.creator&.name} (#{upload.creator&.code})" %></td>
                        <td>
                            <% if has_permission?('DELETE_UPLOAD_DOCUMENT_FOREIGN_WORKER') %>
                                <div class="set-deletion btn btn-danger hidden" style="width: 120px;" data-id="<%= upload.id %>">Remove</div>
                            <% end %>
                        </td>
                    </tr>
                <% end %>
                <% if @foreign_worker.uploads.where(deleted_at: nil, category: ["FOREIGN_WORKER_IMAGE"]).blank? %>
                    <tr><td colspan="5">There are no uploaded documents</td></tr>
                <% end %>
            </table>

            <div id="document-input-group" class="form-group">
                <label for="foreign_worker_uploads">Upload new documents</label>
                <div class="input-group custom-input-group">
                    <div class="document-type col-md-4">
                        <select class="form-control document-type-selector" name="foreign_worker[uploads][][category]">
                            <option value="">Select option</option>
                            <% ForeignWorker::DOCUMENT_TYPES.each do |index, document_type| %>
                                <option value="<%= index %>"><%= document_type %></option>
                            <% end %>
                        </select>
                    </div>
                    <div class="custom-file col-md-8">
                        <input type="file" name="foreign_worker[uploads][][documents]" class="custom-file-input" onchange="validateFiles(this)" multiple disabled required>
                        <label class="custom-file-label">Choose file</label>
                    </div>
                    <div style="width: 140px;" class="">
                        <input type="text" style="border-radius: 0; border: 0;" readonly="readonly" class="form-control inline-file-size" placeholder="0 MB" value="">
                    </div>
                    <div class="removal-button btn btn-danger font-weight-bold">X</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h6>Total Uploaded Size: <span id="total_uploaded_label">0 MB</span></h6>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <%= form.button 'Add more documents', id: 'add_more_documents', class: 'btn btn-success float-right', type: 'button' %>
        </div>
    </div>

    <% if ['edit', 'update', 'reverted'].include?(params[:action]) and !@foreign_worker.code.blank? %>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <% field_id = generate_field_id(form, :amendment_reasons) %>
                    <%= form.label :amendment_reasons, "Amendment Reason", class: 'required' %>
                    <select name="foreign_worker[amendment_reasons][]" id="foreign_worker_amendment_reasons" class="form-control select2" required multiple data-parsley-multiple="foreign_worker[amendment_reasons][]" data-select2-id="foreign_worker_amendment_reasons" data-parsley-errors-container="#select2_parsley_error__<%= field_id %>" data-parsley-class-handler='.select2-selection--multiple' data-parsley-group="foreign_worker_amendment_reasons">
                        <option value=""><%= form_select_option_text %></option>
                        <% AmendmentReason.where.not(:code => 'GENDER').each do |ar| %>
                            <option value="<%= ar.id %>" data-code="<%= ar.code %>"<%= " selected" if (form.object.amendment_reasons || []).include?(ar.id.to_s) %>><%= ar.name %></option>
                        <% end %>
                    </select>
                    <div id="select2_parsley_error__<%= field_id %>"></div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <input type="hidden" name="foreign_worker[amendment_reason_comment]" value="">
                    <%= form.label :amendment_reason_comment, "Amendment Detail" %>
                    <%= form.text_area :amendment_reason_comment, class: "form-control", disabled: true %>
                </div>
            </div>
        </div>

        <% if ["edit", "update"].include?(params[:action]) %>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <%= label_tag :fee_id, "Fee", class: 'required' %>
                        <%= select_tag :fee_id, options_from_collection_for_select(@fees, 'id', 'name', @fee_id), include_blank: form_select_option_text, class: "form-control", required: true %>
                    </div>
                </div>
            </div>
        <% end %>
    <% end %>

    <%=render "shared/approval_comments", { comments: @foreign_worker.approval_request.comments } if @foreign_worker.approval_request %>

</div>

<style>
    .custom-input-group {
        border: 1px solid #e4e7ea;
        border-radius: 5px;
        padding: 0;
    }
    .document-type {
        padding: 0;
    }
    .document-type > select {
        border: 0px;
    }
    .buttons-wrapper {
        padding: 0;
    }
    .top-margin {
        margin-top: 10px;
    }
    #add_more_documents {
        margin-bottom: 10px;
    }
</style>

<% content_for :page_end_scripts do %>
<script>

    // file upload

    <%= render 'shared/fileupload_script' %>

    /**
    * Function to duplicate document fields
    **/
    $('#add_more_documents').click(() => {
        $('.custom-input-group:first')
            .clone(true, true)
            .appendTo("#document-input-group")
            .addClass('top-margin col-md-12')
            .find(".custom-file-input")
            .val("")
            .attr("disabled", "disabled")
        $('.custom-input-group:last')
            .find(".custom-file-label").html("Choose file")
    });


    /**
    * Function to set file name
    **/
    $('.custom-file-input').change(function() {
        let filePath = $(this).val().split("\\")
        let fileName = filePath[filePath.length - 1]
        if (fileName != "")
            $(this).siblings('.custom-file-label').html(fileName)
        else
            $(this).siblings('.custom-file-label').html("Choose file")
    });

    /**
    * Function to re-enable form input after selecting dom type
    **/
    $(".document-type-selector").change(function() {
        let selectedValue = $("option:selected", this).val()

        if (selectedValue.length > 0)
            $("option:selected", this).parent().parent().parent().find(".custom-file input").removeAttr("disabled")
        else
            $("option:selected", this).parent().parent().parent().find(".custom-file input").attr("disabled", "disabled")
    });

    /**
    * Function to remove document fields
    **/
    $('.removal-button').click(function(){
        if ($('.custom-input-group').length > 1){
            $(this).closest('.custom-input-group').remove()
        }
    });

    $('#foreign_worker_amendment_reasons').change(function () {
        let has_other = false;
        $('#foreign_worker_amendment_reasons option:selected').each(function (idx, opt) {
            if (opt.getAttribute('data-code') == 'OTHER') {
                has_other = true;
            }
        });
        $('#foreign_worker_amendment_reason_comment').prop('disabled', !has_other);
    });


    /*
    maid_online_changed($('#is_maid_online'))
    $('#is_maid_online').change(function () {
        maid_online_changed($(this))
    });
    */

    function maid_online_changed(cb){
        $('select[name="foreign_worker[job_type_id]"] > option').each(function (idx, opt) {
            //if (cb.is(':checked')) {
            if (cb.val() == "PRAON") {
                if (opt.getAttribute('data-name') == 'DOMESTIC') {
                    opt.selected = true;
                } else {
                    opt.selected = false;
                    opt.setAttribute('disabled', true);
                }
                $('#foreign_worker_pati_false').prop("checked", true);
                $('#foreign_worker_pati_true').prop("disabled", true);
            } else {
                opt.removeAttribute('disabled');
                $('#foreign_worker_pati_true').prop("disabled", false);
            }

        });
        $('select[name="foreign_worker[job_type_id]"]').select2();
    }

    $('input[type="checkbox"]').on('change', function () {
        $('input[name="programme[]"]').not(this).prop('checked', false);
        maid_online_changed($('input[name="programme[]"]:checked'));
    });

    $('.set-deletion').click(function() {
        filenames = $(this).closest('tr').find('.filenames');
        filenames.toggleClass('text-decoration-line-through');
        text = $(this).hasClass('btn-danger') ? 'Undo Remove' : 'Remove';
        $(this).text(text).toggleClass('btn-danger btn-primary');

        ids = $('.set-deletion.btn-primary').map(function() {
            return $(this).attr('data-id');
        }).get().join(',');

        var i = $('#remove_uploaded_file').val(ids);

        if (i != null){
            $('#foreign_worker_amendment_reasons').prop('required',false);
            $('#fee_id').prop('required',false);
        }else{
            $('#foreign_worker_amendment_reasons').prop('required',true);
            $('#fee_id').prop('required',true);
        }

    });
</script>
<% end %>